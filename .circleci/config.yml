version: 2.1
orbs:
  codecov: codecov/codecov@1.2.5
  go: circleci/go@1.6.0
executors:
  build:
    docker:
      - image: circleci/golang:1.16
jobs:
  test:
    executor:
      name: build
    steps:
      - checkout
      - go/mod-download-cached
      - restore_cache:
          keys:
            - go-build-cache-v1-{{ .Branch }}--{{ .Revision }}
            - go-build-cache-v1-{{ .Branch }}
            - go-build-cache-v1-
      - run: mkdir -p /tmp/artifacts
      - run: mkdir -p /tmp/workspace
      - run:
          name: go test & coverage generate
          command: |
            go test -race ./... -coverprofile=c.out -covermode=atomic
            go tool cover -html=c.out -o coverage.html
            mv coverage.html /tmp/artifacts
            mv c.out /tmp/workspace
      - save_cache:
          key: go-build-cache-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - /home/circleci/.cache/go-build
      - store_artifacts:
          path: /tmp/artifacts
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - c.out
  show_artifacts_path:
    docker:
      - image: cimg/base:2021.07
    steps:
      - run:
          name: Get artifacts
          command: |
            artifacts=$(curl -X GET   "https://circleci.com/api/v2/project/github/MokkeMeguru/goapollo-mutation/$CIRCLE_BUILD_NUM/artifacts" \
            -H "Accept: application/json" \
            -u "$CIRCLE_API_TOKEN:")
            echo "export ARTIFACT_RESPONSE=$artifacts" >> $BASH_ENV
            echo $artifacts

  upload_codecov:
    docker:
      - image: cimg/base:2021.07
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: show out
          command: cat /tmp/workspace/c.out
      - codecov/upload:
          file: /tmp/workspace/c.out
          token: CODECOV_TOKEN

workflows:
  version: 2.1
  builds:
    jobs:
      - test
      - show_artifacts_path:
          requires:
            - test
      - upload_codecov:
          requires:
            - test
